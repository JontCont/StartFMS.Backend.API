// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StartFMS.Models.Backend;

#nullable disable

namespace StartFMS.Backend.API.Migrations
{
    [DbContext(typeof(A00_BackendContext))]
    partial class A00_BackendContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StartFMS.Models.Backend.A00Account", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__A00_Acco__7AD04F11B573F9A5");

                    b.HasIndex("DivisionId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("A00_Account", (string)null);
                });

            modelBuilder.Entity("StartFMS.Models.Backend.A00Division", b =>
                {
                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DivisionId")
                        .HasName("PK__A00_Divi__20EFC6A8CCB5E78C");

                    b.ToTable("A00_Division", (string)null);
                });

            modelBuilder.Entity("StartFMS.Models.Backend.A00JobTitle", b =>
                {
                    b.Property<Guid>("JobTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("JobTitleId")
                        .HasName("PK__A00_JobT__35382FE99AC0583C");

                    b.ToTable("A00_JobTitle", (string)null);
                });

            modelBuilder.Entity("StartFMS.Models.Backend.A00Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__A00_Role__8AFACE1A3E7C0A0F");

                    b.ToTable("A00_Role", (string)null);
                });

            modelBuilder.Entity("StartFMS.Models.Backend.B10LineMessageOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IsUse")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("(N'false')");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Id");

                    b.ToTable("B10_LineMessageOption", (string)null);
                });

            modelBuilder.Entity("StartFMS.Models.Backend.B10LineMessageType", b =>
                {
                    b.Property<string>("TypeId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeMemo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TypeId");

                    b.ToTable("B10_LineMessageType", (string)null);
                });

            modelBuilder.Entity("StartFMS.Models.Backend.S01MenuBasicSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasComment("顯示順序 (透過Id抓取，判斷在第幾層位置)");

                    b.Property<string>("Icon")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')")
                        .HasComment("畫面Icon");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父層ID (目前設為 Id)");

                    b.Property<string>("Url")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("S01_MenuBasicSetting", (string)null);
                });

            modelBuilder.Entity("StartFMS.Models.Backend.S10SystemConfig", b =>
                {
                    b.Property<string>("ParName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("par_name");

                    b.Property<string>("ParMemo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("par_memo");

                    b.Property<string>("ParValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("par_value");

                    b.HasKey("ParName");

                    b.ToTable("S10_SystemConfig", (string)null);
                });

            modelBuilder.Entity("StartFMS.Models.Backend.A00Account", b =>
                {
                    b.HasOne("StartFMS.Models.Backend.A00Division", "Division")
                        .WithMany("A00Accounts")
                        .HasForeignKey("DivisionId")
                        .IsRequired()
                        .HasConstraintName("FK_Employee_ToTable_1");

                    b.HasOne("StartFMS.Models.Backend.A00JobTitle", "JobTitle")
                        .WithMany("A00Accounts")
                        .HasForeignKey("JobTitleId")
                        .IsRequired()
                        .HasConstraintName("FK_Employee_ToTable");

                    b.Navigation("Division");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("StartFMS.Models.Backend.S01MenuBasicSetting", b =>
                {
                    b.HasOne("StartFMS.Models.Backend.S01MenuBasicSetting", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("StartFMS.Models.Backend.A00Division", b =>
                {
                    b.Navigation("A00Accounts");
                });

            modelBuilder.Entity("StartFMS.Models.Backend.A00JobTitle", b =>
                {
                    b.Navigation("A00Accounts");
                });

            modelBuilder.Entity("StartFMS.Models.Backend.S01MenuBasicSetting", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
